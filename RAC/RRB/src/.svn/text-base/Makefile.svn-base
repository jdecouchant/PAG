#
# OMNeT++/OMNEST Makefile for RRB
#
# This file was generated with the command:
#  opp_makemake -f --deep -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/ipv4 -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/common -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/rsvp_te -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/icmpv6 -I/Users/amadoudiarra/Documents/software/inet/src/transport/tcp -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/mpls -I/Users/amadoudiarra/Documents/software/inet/src/base -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/ted -I/Users/amadoudiarra/Documents/software/inet/src/util/headerserializers -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/contract -I/Users/amadoudiarra/Documents/software/inet/src/util -I/Users/amadoudiarra/Documents/software/inet/src/transport/contract -I/Users/amadoudiarra/Documents/software/inet/src/linklayer/mfcore -I/Users/amadoudiarra/Documents/software/inet/src/transport/sctp -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/ipv6 -I/Users/amadoudiarra/Documents/software/inet/src/applications/tcpapp -I/Users/amadoudiarra/Documents/software/inet/src/world -I/Users/amadoudiarra/Documents/software/inet/src/applications/pingapp -I/Users/amadoudiarra/Documents/software/inet/src/linklayer/contract -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/arp -I/Users/amadoudiarra/Documents/software/inet/src/networklayer/ldp -I/Users/amadoudiarra/Documents/software/inet/src/transport/udp -L/Users/amadoudiarra/Documents/software/inet/out/$(CONFIGNAME)/src -linet -KINET_PROJ=/Users/amadoudiarra/Documents/software/inet
#

# Name of target to be created (-o option)
TARGET = RRB$(EXE_SUFFIX)

# User interface (uncomment one) (-u option)
USERIF_LIBS = $(ALL_ENV_LIBS) # that is, $(TKENV_LIBS) $(CMDENV_LIBS)
#USERIF_LIBS = $(CMDENV_LIBS)
#USERIF_LIBS = $(TKENV_LIBS)

# C++ include paths (with -I)
INCLUDE_PATH = \
    -I$(INET_PROJ)/src/networklayer/ipv4 \
    -I$(INET_PROJ)/src/networklayer/common \
    -I$(INET_PROJ)/src/networklayer/rsvp_te \
    -I$(INET_PROJ)/src/networklayer/icmpv6 \
    -I$(INET_PROJ)/src/transport/tcp \
    -I$(INET_PROJ)/src/networklayer/mpls \
    -I$(INET_PROJ)/src/base \
    -I$(INET_PROJ)/src/networklayer/ted \
    -I$(INET_PROJ)/src/util/headerserializers \
    -I$(INET_PROJ)/src/networklayer/contract \
    -I$(INET_PROJ)/src/util \
    -I$(INET_PROJ)/src/transport/contract \
    -I$(INET_PROJ)/src/linklayer/mfcore \
    -I$(INET_PROJ)/src/transport/sctp \
    -I$(INET_PROJ)/src/networklayer/ipv6 \
    -I$(INET_PROJ)/src/applications/tcpapp \
    -I$(INET_PROJ)/src/world \
    -I$(INET_PROJ)/src/applications/pingapp \
    -I$(INET_PROJ)/src/linklayer/contract \
    -I$(INET_PROJ)/src/networklayer/arp \
    -I$(INET_PROJ)/src/networklayer/ldp \
    -I$(INET_PROJ)/src/transport/udp \
    -I. \
    -IRRAC

# Additional object and library files to link with
EXTRA_OBJS =

# Additional libraries (-L, -l options)
LIBS = -L$(INET_PROJ)/out/$(CONFIGNAME)/src  -linet
LIBS += -Wl,-rpath,`abspath $(INET_PROJ)/out/$(CONFIGNAME)/src`

# Output directory
PROJECT_OUTPUT_DIR = ../out
PROJECTRELATIVE_PATH = src
O = $(PROJECT_OUTPUT_DIR)/$(CONFIGNAME)/$(PROJECTRELATIVE_PATH)

# Object files for local .cc and .msg files
OBJS = $O/RRBproto.o $O/Test.o $O/RRAC/RRAC.o $O/RRBmsg_m.o

# Message files
MSGFILES = \
    RRBmsg.msg

# Other makefile variables (-K)
INET_PROJ=/Users/amadoudiarra/Documents/software/inet

#------------------------------------------------------------------------------

# Pull in OMNeT++ configuration (Makefile.inc or configuser.vc)

ifneq ("$(OMNETPP_CONFIGFILE)","")
CONFIGFILE = $(OMNETPP_CONFIGFILE)
else
ifneq ("$(OMNETPP_ROOT)","")
CONFIGFILE = $(OMNETPP_ROOT)/Makefile.inc
else
CONFIGFILE = $(shell opp_configfilepath)
endif
endif

ifeq ("$(wildcard $(CONFIGFILE))","")
$(error Config file '$(CONFIGFILE)' does not exist -- add the OMNeT++ bin directory to the path so that opp_configfilepath can be found, or set the OMNETPP_CONFIGFILE variable to point to Makefile.inc)
endif

include $(CONFIGFILE)

# Simulation kernel and user interface libraries
OMNETPP_LIB_SUBDIR = $(OMNETPP_LIB_DIR)/$(TOOLCHAIN_NAME)
OMNETPP_LIBS = -L"$(OMNETPP_LIB_SUBDIR)" -L"$(OMNETPP_LIB_DIR)" -loppmain$D $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS = $(CFLAGS)  $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
MSGCOPTS = $(INCLUDE_PATH)

# we want to recompile everything if COPTS changes,
# so we store COPTS into $COPTS_FILE and have object
# files depend on it (except when "make depend" was called)
COPTS_FILE = $O/.last-copts
ifneq ($(MAKECMDGOALS),depend)
ifneq ("$(COPTS)","$(shell cat $(COPTS_FILE) 2>/dev/null || echo '')")
$(shell $(MKPATH) "$O" && echo "$(COPTS)" >$(COPTS_FILE))
endif
endif

#------------------------------------------------------------------------------
# User-supplied makefile fragment(s)
# >>>
# <<<
#------------------------------------------------------------------------------

# Main target
all: $(TARGET)

$(TARGET) : $O/$(TARGET)
	$(LN) $O/$(TARGET) .

$O/$(TARGET): $(OBJS)  $(wildcard $(EXTRA_OBJS)) Makefile
	@$(MKPATH) $O
	$(CXX) $(LDFLAGS) -o $O/$(TARGET)  $(OBJS) $(EXTRA_OBJS) $(AS_NEEDED_OFF) $(WHOLE_ARCHIVE_ON) $(LIBS) $(WHOLE_ARCHIVE_OFF) $(OMNETPP_LIBS)

.PHONY:

.SUFFIXES: .cc

$O/%.o: %.cc $(COPTS_FILE)
	@$(MKPATH) $(dir $@)
	$(CXX) -c $(COPTS) -o $@ $<

%_m.cc %_m.h: %.msg
	$(MSGC) -s _m.cc $(MSGCOPTS) $?

msgheaders: $(MSGFILES:.msg=_m.h)

clean:
	-rm -rf $O
	-rm -f RRB RRB.exe libRRB.so libRRB.a libRRB.dll libRRB.dylib
	-rm -f ./*_m.cc ./*_m.h
	-rm -f RRAC/*_m.cc RRAC/*_m.h

cleanall: clean
	-rm -rf $(PROJECT_OUTPUT_DIR)

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile -P\$$O/ -- $(MSG_CC_FILES)  ./*.cc RRAC/*.cc

# DO NOT DELETE THIS LINE -- make depend depends on it.
$O/RRBmsg_m.o: RRBmsg_m.cc \
	RRBmsg_m.h \
	Util.h \
	$(INET_PROJ)/src/base/INETDefs.h \
	$(INET_PROJ)/src/networklayer/contract/IPAddress.h \
	$(INET_PROJ)/src/networklayer/contract/IPAddressResolver.h \
	$(INET_PROJ)/src/networklayer/contract/IPv6Address.h \
	$(INET_PROJ)/src/networklayer/contract/IPvXAddress.h \
	$(INET_PROJ)/src/transport/contract/TCPCommand_m.h \
	$(INET_PROJ)/src/transport/contract/TCPSocket.h
$O/RRBproto.o: RRBproto.cc \
	RRBmsg_m.h \
	RRBproto.h \
	Util.h \
	$(INET_PROJ)/src/applications/tcpapp/GenericAppMsg_m.h \
	$(INET_PROJ)/src/applications/tcpapp/TCPGenericCliAppBase.h \
	$(INET_PROJ)/src/base/INETDefs.h \
	$(INET_PROJ)/src/networklayer/contract/IPAddress.h \
	$(INET_PROJ)/src/networklayer/contract/IPAddressResolver.h \
	$(INET_PROJ)/src/networklayer/contract/IPv6Address.h \
	$(INET_PROJ)/src/networklayer/contract/IPvXAddress.h \
	$(INET_PROJ)/src/transport/contract/TCPCommand_m.h \
	$(INET_PROJ)/src/transport/contract/TCPSocket.h
$O/Test.o: Test.cc \
	RRBmsg_m.h \
	Test.h \
	Util.h \
	$(INET_PROJ)/src/base/INETDefs.h \
	$(INET_PROJ)/src/networklayer/contract/IPAddress.h \
	$(INET_PROJ)/src/networklayer/contract/IPAddressResolver.h \
	$(INET_PROJ)/src/networklayer/contract/IPv6Address.h \
	$(INET_PROJ)/src/networklayer/contract/IPvXAddress.h \
	$(INET_PROJ)/src/transport/contract/TCPCommand_m.h \
	$(INET_PROJ)/src/transport/contract/TCPSocket.h
$O/RRAC/RRAC.o: RRAC/RRAC.cc \
	RRAC/RRAC.h

